{"version":3,"sources":["logo.svg","api.js","components/UserSearchForm.js","components/SimpleAppBar.js","components/UserSearchPage.js","components/UserProfileCard.js","components/UserSubmissionCard.js","components/UserProfilePage.js","App.js","reportWebVitals.js","index.js"],"names":["getRandomUser","a","fetch","then","res","ok","json","data","subs","submissions","len","length","Math","floor","random","username","useStyles","makeStyles","theme","root","padding","display","alignItems","justify","button","spacing","textAlign","width","margin","UserSearchForm","useState","_username","_setUsername","isValid","setIsValid","history","useHistory","usernameRef","useRef","setUsername","uname","current","getUsername","useEffect","console","log","classes","handleSubmit","e","preventDefault","push","catch","handleRandom","name","setTimeout","onSubmit","noValidate","Grid","container","className","item","xs","TextField","error","id","label","value","style","onChange","target","Button","startIcon","onClick","SimpleAppBar","AppBar","position","color","Toolbar","to","textDecoration","Typography","component","variant","UserSearchPage","CssBaseline","Container","maxWidth","direction","minHeight","align","backgroundColor","palette","background","paper","generate_item","icon","ListItem","ListItemIcon","ListItemText","primary","UserProfileCard","profile","Paper","List","aboutMe","countryName","school","ranking","UserSubmissionCard","i","timestamp","rows","columns","field","headerName","pageSize","autoHeight","getUserInfo","height","UserProfilePage","useParams","userInfo","setUserInfo","Box","my","paddingTop","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9aff37a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Get a random user from recent submission authors\nconst getRandomUser = async () => {\n  return await fetch(\"/api/v1/submissions/\")\n    .then((res) => (res.ok ? res.json() : null))\n    .then((data) => {\n      const subs = data.submissions;\n      // console.log(subs);\n      const len = subs.length;\n      const randIdx = Math.floor(Math.random() * len);\n      // console.log(subs[randIdx].username);\n      return subs[randIdx].username;\n    });\n};\n\nconst getUserInfo = () => {};\nexport { getRandomUser };\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CasinoIcon from \"@material-ui/icons/Casino\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { getRandomUser } from \"../api\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    // direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  button: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    width: \"100%\",\n    justify: \"center\",\n    alignItems: \"center\",\n    margin: \"10px\",\n  },\n}));\n\n// When the user clicks on the search icon, check if\n// the username exists. If so, go to user submission detail page.\n// If not, show some error.\n\nexport default function UserSearchForm() {\n  const [_username, _setUsername] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n  const history = useHistory();\n  const usernameRef = useRef(_username);\n\n  const setUsername = (uname) => {\n    usernameRef.current = uname;\n    _setUsername(uname);\n  };\n\n  const getUsername = () => {\n    return usernameRef.current;\n  };\n\n  useEffect(() => {\n    console.log(\"useEffect: username is\", _username);\n  });\n\n  const classes = useStyles();\n\n  // When user clicked on search or typed in enter,\n  // check if the username exist and redirect if so.\n  // Otherwise give an error.\n  const handleSubmit = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    const username = getUsername();\n    return fetch(\"/api/v1/user/\" + username + \"/info\")\n      .then((res) => {\n        if (res.ok) {\n          const data = res.json();\n          console.log(\"Redirect to\", username);\n          history.push(\"/user/\" + username);\n        } else {\n          console.log(\"Did not found\", username);\n          setIsValid(false);\n        }\n      })\n      .catch(console.log);\n  };\n\n  // When user clicks on \"Feeling Lucky\", get a random user\n  // to fill the search box then redirect.\n  const handleRandom = async () => {\n    await getRandomUser()\n      .then((name) => {\n        setUsername(name);\n        console.log(\n          `username after calling setUsername(${name}) is`,\n          getUsername()\n        );\n\n        setTimeout(() => {\n          // console.log(\"random user is\", username);\n          handleSubmit();\n        }, 1000);\n        //   handleSubmit();\n      })\n      .catch((e) => {\n        console.log(\"Failed to get random user:\", e);\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} noValidate>\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.root}\n      >\n        <Grid item xs={12}>\n          <TextField\n            error={!isValid}\n            id=\"standard-basic\"\n            label=\"Leetcode username\"\n            value={_username}\n            style={{ width: \"100%\" }}\n            onChange={(e) => {\n              setIsValid(true);\n              setUsername(e.target.value);\n              console.log(\"TextField onCHange: username\", getUsername());\n            }}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <Button\n            className={classes.button}\n            startIcon={<SearchIcon />}\n            onClick={handleSubmit}\n          >\n            Search\n          </Button>\n        </Grid>\n        <Grid item xs={6}>\n          <Button\n            className={classes.button}\n            startIcon={<CasinoIcon />}\n            onClick={handleRandom}\n          >\n            Feeling lucky\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function SimpleAppBar() {\n  return (\n    <AppBar position=\"fixed\" color=\"\">\n      <Toolbar>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Typography component=\"h1\" variant=\"h6\">\n            Leetcode Tracker\n          </Typography>\n        </Link>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Card, CardContent, Toolbar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\n\nimport UserSearchForm from \"./UserSearchForm\";\nimport SimpleAppBar from \"./SimpleAppBar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n}));\n\nexport default function UserSearchPage() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <SimpleAppBar />\n      <Container maxWidth=\"md\">\n        <Grid\n          container\n          spacing={2}\n          direction=\"column\"\n          justify=\"center\"\n          style={{ minHeight: \"100vh\", margin: \"auto\" }}\n        >\n          <Grid item>\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\">\n              Leetcode Tracker\n            </Typography>\n          </Grid>\n          <Grid item>\n            <UserSearchForm />\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport NoteIcon from \"@material-ui/icons/Note\";\nimport ShowChartIcon from \"@material-ui/icons/ShowChart\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1),\n  },\n}));\n\nfunction generate_item(value, icon) {\n  if (value) {\n    return (\n      <ListItem>\n        <ListItemIcon>{icon}</ListItemIcon>\n        <ListItemText primary={value} />\n      </ListItem>\n    );\n  }\n}\n\nexport default function UserProfileCard({ username, profile }) {\n  const classes = useStyles();\n  console.log(\"user profile:\", profile);\n  if (profile) {\n    return (\n      <Paper>\n        <Typography className={classes.root} variant=\"h4\">\n          {username}\n        </Typography>\n        <List>\n          {generate_item(profile.aboutMe, <NoteIcon />)}\n          {generate_item(profile.countryName, <LanguageIcon />)}\n          {generate_item(profile.school, <SchoolIcon />)}\n          {generate_item(profile.ranking, <ShowChartIcon />)}\n        </List>\n      </Paper>\n    );\n  } else {\n    return (\n      <Paper>\n        <Typography className={classes.root} variant=\"h4\">\n          {username}\n        </Typography>\n      </Paper>\n    );\n  }\n}\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { DataGrid } from \"@material-ui/data-grid\";\n\nexport default function UserSubmissionCard({ subs }) {\n  if (!subs) {\n    return <Paper>Loading</Paper>;\n  } else {\n    console.log(\"add ids:\", subs);\n    const len = subs.length || 0;\n    for (let i = 0; i < len; i++) {\n      subs[i].id = subs[i].timestamp;\n    }\n    const columns = [\n      { field: \"title\", headerName: \"Title\", width: 500 },\n      { field: \"lang\", headerName: \"Language\", width: 150 },\n      { field: \"status\", headerName: \"Status\", width: 200 },\n      { field: \"timestamp\", headerName: \"Time\", width: 200 },\n    ];\n    return (\n      <Paper>\n        {console.log(subs)}\n        <DataGrid rows={subs} columns={columns} pageSize={10} autoHeight />\n      </Paper>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport { Container } from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { Card, CardContent, Toolbar } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nimport UserProfileCard from \"./UserProfileCard\";\nimport UserSubmissionCard from \"./UserSubmissionCard\";\nimport SimpleAppBar from \"./SimpleAppBar\";\n\nconst getUserInfo = async (uname) => {\n  return await fetch(\"/api/v1/user/\" + uname)\n    .then((res) => (res.ok ? res.json() : null))\n    .then((data) => {\n      console.log(\"getUserInfo:\", data);\n      return data;\n    });\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n    },\n  },\n}));\n\nexport default function UserProfilePage() {\n  const { username } = useParams();\n  const [userInfo, setUserInfo] = useState({});\n  const classes = useStyles();\n\n  console.log(\"User profile page for\", username);\n\n  useEffect(() => {\n    getUserInfo(username)\n      .then((data) => setUserInfo(data))\n      .catch(console.log);\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <CssBaseline />\n      <SimpleAppBar />\n      <Box my={15}>\n        <Grid\n          container\n          spacing={2}\n          direction=\"column\"\n          // justify=\"center\"\n          style={{ minHeight: \"\", paddingTop: \"20\" }}\n        >\n          <Grid item>\n            <UserProfileCard username={username} profile={userInfo.profile} />\n          </Grid>\n          <Grid item>\n            <UserSubmissionCard subs={userInfo.submissions} />\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n}\n","import logo from \"./logo.svg\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport UserSearchPage from \"./components/UserSearchPage\";\nimport UserProfilePage from \"./components/UserProfilePage\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/user/:username\">\n          <UserProfilePage />\n        </Route>\n        <Route path=\"/\">\n          <UserSearchPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}